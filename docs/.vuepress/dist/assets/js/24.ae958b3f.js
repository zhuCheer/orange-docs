(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{335:function(t,a,e){t.exports=e.p+"assets/img/screenshot_1577434714010.586ff087.png"},370:function(t,a,e){"use strict";e.r(a);var n=e(25),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"图片验证码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#图片验证码"}},[t._v("#")]),t._v(" 图片验证码")]),t._v(" "),n("p",[t._v("orange 图片验证码能快速生成字符类型的图片验证码，通过sessioin存储对验证码进行校验。")]),t._v(" "),n("h3",{attrs:{id:"快速使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速使用"}},[t._v("#")]),t._v(" 快速使用")]),t._v(" "),n("h4",{attrs:{id:"生成图片验证码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生成图片验证码"}},[t._v("#")]),t._v(" 生成图片验证码")]),t._v(" "),n("ul",[n("li",[t._v("使用前先将配置中的 session 功能开启；")]),t._v(" "),n("li",[t._v("在控制器方法中添加")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 第一个参数是控制器方法中的 context\n// 第二个参数是生成的字符个数 一般4-6\n// 第三，四个参数是图片的宽，高，可以不填，默认尺寸是180*60\nreturn captcha.CaptchaImgShow(c  *app.Context,  n  int,  width height int)\n\n// 一个控制器的完整例子\nfunc Captcha(c *app.Context) error {\n   return captcha.CaptchaImgShow(c, 4)\n}\n")])])]),n("p",[t._v("有的时候我们业务中可能希望能获得生成验证码的具体数据进行业务处理，可以通过如下方法获取")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 一个控制器的完整例子\n// CaptchaImgByte方法能获取到具体的验证码数据和图片 byte 数据\nfunc CaptchaCode(c *app.Context) error {\n   text, imgByte := captcha.CaptchaImgByte(c, 4)\n   \n   fmt.Println(text, imgByte)\n   \n   return c.ToString(text)\n\n}\n")])])]),n("h4",{attrs:{id:"校验验证码正确性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#校验验证码正确性"}},[t._v("#")]),t._v(" 校验验证码正确性")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// 这是一个控制器函数\nfunc VerifyImg(c *app.Context) error {\n   // 获取 GET 参数中的验证码 \n   code := c.Request().FormValue("code")\n\n  // 校验验证码的正确性，返回值是布尔类型\n   ret:= captcha.CaptchaVerify(c, code)\n\n   return c.ToJson(map[string]interface{}{\n      "result": ret,\n   })\n}\n')])])]),n("p",[t._v("图片验证码效果图预览\n"),n("img",{attrs:{src:e(335),alt:""}})])])}),[],!1,null,null,null);a.default=r.exports}}]);