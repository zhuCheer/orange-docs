(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{347:function(e,a,t){"use strict";t.r(a);var s=t(25),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),t("p",[e._v("Orange 连接 mysql 使用了连接池，可以配置连接池相关参数，mysql 操作通过 gorm 包实现，对 mysql 增删改操作简单方便。")]),e._v(" "),t("h2",{attrs:{id:"mysql-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql-配置"}},[e._v("#")]),e._v(" Mysql 配置")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[database] \n    initCap = 2 #数据库连接池 初始化连接数\n    maxCap = 5 #数据库连接池 最大连接数，超过次数后连接则实时生成实时关闭，类似php短链接\n    idleTimeout = 5 # 连接空闲释放时间\n    debug = true # 是否开启debug，可显示mysql执行的sql语句\n    [database.mysql]\n        [database.mysql.default] #mysql配置，可以配置多个，默认名称default\n            addr = "192.168.137.100:3306"\n            username = "root"\n            password = "123456"\n            dbname = "weixin"\n')])])]),t("h2",{attrs:{id:"获取数据库操作对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取数据库操作对象"}},[e._v("#")]),e._v(" 获取数据库操作对象")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('//获取一个mysql操作对象，参数是配置中对应的名称\ndb, put, err := database.GetMysql("default")\n\n//连接使用完成后记得将连接放回连接池，否则会造成连接池耗尽大量产生短链接等问题\ndefer  database.PutConn(put) \n')])])]),t("h2",{attrs:{id:"数据库操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作"}},[e._v("#")]),e._v(" 数据库操作")]),e._v(" "),t("ul",[t("li",[e._v("获取到的操作对象即是 gorm 对象，可以直接按照 gorm 包的使用方法进行操作；")]),e._v(" "),t("li",[e._v("gorm 包地址 "),t("a",{attrs:{href:"http://gorm.book.jasperxu.com/database.html#dbc",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://gorm.book.jasperxu.com/database.html#dbc"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[e._v("#")]),e._v(" 创建")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('db, put, err := database.GetMysql("default")\ndefer  database.PutConn(put) \n\nuser := User{Name: "Jinzhu", Age: 18, Birthday: time.Now()}\ndb.NewRecord(user) // => 主键为空返回`true`\n\ndb.Create(&user)\n')])])]),t("h3",{attrs:{id:"查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[e._v("#")]),e._v(" 查询")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('db, put, err := database.GetMysql("default")\ndefer  database.PutConn(put) \n\n// 获取第一个匹配记录\ndb.Table("users").Where("name = ?", "jinzhu").First(&user)\n//// SELECT * FROM users WHERE name = \'jinzhu\' limit 1;\n\n// 获取所有匹配记录\ndb.Table("users").Where("name = ?", "jinzhu").Find(&users)\n//// SELECT * FROM users WHERE name = \'jinzhu\';\n')])])]),t("h3",{attrs:{id:"更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[e._v("#")]),e._v(" 更新")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('db, put, err := database.GetMysql("default")\ndefer  database.PutConn(put) \n\n// 更新单个属性（如果更改）\ndb.Table("users").Update("name", "hello")\n//// UPDATE users SET name=\'hello\', updated_at=\'2013-11-17 21:34:10\' WHERE id=111;\n\n// 使用组合条件更新单个属性\ndb.Table("users").Where("active = ?", true).Update("name", "hello")\n//// UPDATE users SET name=\'hello\', updated_at=\'2013-11-17 21:34:10\' WHERE id=111 AND active=true;\n\n// 使用`map`更新多个属性，只会更新这些更改的字段\ndb.Table("users").Updates(map[string]interface{}{"name": "hello", "age": 18, "actived": false})\n//// UPDATE users SET name=\'hello\', age=18, actived=false, updated_at=\'2013-11-17 21:34:10\' WHERE id=111;\n\n// 使用`struct`更新多个属性，只会更新这些更改的和非空白字段\ndb.Table("users").Updates(User{Name: "hello", Age: 18})\n//// UPDATE users SET name=\'hello\', age=18, updated_at = \'2013-11-17 21:34:10\' WHERE id = 111;\n\n// 警告:当使用struct更新时，FORM将仅更新具有非空值的字段\n// 对于下面的更新，什么都不会更新为""，0，false是其类型的空白值\ndb.Table("users").Updates(User{Name: "", Age: 0, Actived: false})\n')])])]),t("h3",{attrs:{id:"删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[e._v("#")]),e._v(" 删除")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('db, put, err := database.GetMysql("default")\ndefer  database.PutConn(put) \n\ndb.Table("users").Where("email LIKE ?", "%jinzhu%").Delete(Email{})\n//// DELETE from emails where email LIKE "%jinhu%";\n\ndb.Table("users").Delete(Email{}, "email LIKE ?", "%jinzhu%")\n//// DELETE from emails where email LIKE "%jinhu%";\n')])])])])}),[],!1,null,null,null);a.default=r.exports}}]);